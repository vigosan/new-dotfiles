#!/usr/bin/env zsh

# ============================================================================
# Environment Variables
# ============================================================================

export CLICOLOR=1
export EDITOR=vim
export GIT_EDITOR=vim
export KEYTIMEOUT=1
export LC_ALL=en_US.UTF-8
export TERM="xterm-256color"
export WORDCHARS='*?_-.[]~=&;!#$%^(){}<>'

# Base PATH - include local bin for chezmoi and other tools
export PATH="$HOME/bin:/opt/homebrew/bin:/usr/local/bin:$PATH"

# ============================================================================
# Sensitive Environment Variables
# ============================================================================

[[ -f ~/.zshrc.secrets ]] && source ~/.zshrc.secrets

# ============================================================================
# Aliases
# ============================================================================

{{- if .data.work }}
# Work-specific aliases
alias claude='env AWS_PROFILE=ai_codegen CLAUDE_CODE_USE_BEDROCK=1 AWS_REGION=us-east-1 ANTHROPIC_MODEL="arn:aws:bedrock:us-east-1:193501891505:inference-profile/us.anthropic.claude-sonnet-4-20250514-v1:0" claude'
{{- end }}

# ============================================================================
# Completion System
# ============================================================================

zstyle ':completion:*' menu select
zstyle ':completion:*' completer _complete
zstyle ':completion:*' matcher-list '' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]}' '+l:|=* r:|=*'

# Load and initialize completion system (optimized with caching)
autoload -Uz compinit
if [[ -n ~/.zcompdump(#qN.mh+24) ]]; then
  compinit
else
  compinit -C
fi

autoload -U colors && colors
autoload -U bashcompinit && bashcompinit
autoload -U select-word-style
select-word-style bash
zmodload -i zsh/complist

# ============================================================================
# ZSH Options
# ============================================================================

unsetopt menu_complete
unsetopt flowcontrol

setopt prompt_subst
setopt always_to_end
setopt append_history
setopt auto_menu
setopt complete_in_word
setopt extended_history
setopt hist_expire_dups_first
setopt hist_ignore_dups
setopt hist_ignore_space
setopt hist_verify
setopt inc_append_history
setopt interactivecomments
setopt share_history
setopt auto_cd

# ============================================================================
# Zsh Plugins
# ============================================================================

# Load zsh-completions
if [[ -d /opt/homebrew/share/zsh-completions ]]; then
  fpath=(/opt/homebrew/share/zsh-completions $fpath)
fi

# Load autosuggestions
[[ -f /opt/homebrew/share/zsh-autosuggestions/zsh-autosuggestions.zsh ]] && \
  source /opt/homebrew/share/zsh-autosuggestions/zsh-autosuggestions.zsh

# Load syntax highlighting (must be near the end)
[[ -f /opt/homebrew/share/zsh-fast-syntax-highlighting/fast-syntax-highlighting.plugin.zsh ]] && \
  source /opt/homebrew/share/zsh-fast-syntax-highlighting/fast-syntax-highlighting.plugin.zsh

# Load history substring search (must be after syntax highlighting)
[[ -f /opt/homebrew/share/zsh-history-substring-search/zsh-history-substring-search.zsh ]] && \
  source /opt/homebrew/share/zsh-history-substring-search/zsh-history-substring-search.zsh

# Bind keys for history substring search
if [[ -n "${key[Up]}" ]]; then
  bindkey "${key[Up]}" history-substring-search-up
fi
if [[ -n "${key[Down]}" ]]; then
  bindkey "${key[Down]}" history-substring-search-down
fi

# ============================================================================
# External Tool Integrations
# ============================================================================

# Zoxide (cd replacement)
eval "$(zoxide init --cmd z zsh)"

# Mise (runtime version manager)
eval "$(mise activate zsh)"

# Starship prompt (must be last)
eval "$(starship init zsh)"